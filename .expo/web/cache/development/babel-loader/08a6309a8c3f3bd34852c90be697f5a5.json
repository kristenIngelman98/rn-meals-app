{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/kristen/Documents/GitHub/rn-meals-app/components/CategoryGridTile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\n\nvar CategoryGridTile = function CategoryGridTile(props) {\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  return React.createElement(View, {\n    style: styles.gridItem,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableCmp, {\n    style: {\n      flex: 1\n    },\n    onPress: props.onSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: _objectSpread(_objectSpread({}, styles.container), {\n      backgroundColor: props.color\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    numberOfLines: 2,\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }\n  }, props.title))));\n};\n\nvar styles = StyleSheet.create({\n  gridItem: {\n    flex: 1,\n    margin: 15,\n    height: 150\n  },\n  container: {\n    flex: 1,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowOpacity: 0.26,\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowRadius: 10,\n    elevation: 3,\n    padding: 15,\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end'\n  },\n  title: {\n    fontSize: 22,\n    textAlign: 'right'\n  }\n});\nexport default CategoryGridTile;","map":{"version":3,"sources":["/Users/kristen/Documents/GitHub/rn-meals-app/components/CategoryGridTile.js"],"names":["React","CategoryGridTile","props","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","styles","gridItem","flex","onSelect","container","backgroundColor","color","title","StyleSheet","create","margin","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","shadowRadius","elevation","padding","justifyContent","alignItems","fontSize","textAlign"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;;AAWA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAC9B,MAAIC,YAAY,GAAGC,gBAAnB;;AAEA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA8BD,QAAQ,CAACE,OAAT,IAAoB,EAAtD,EAA0D;AACtDJ,IAAAA,YAAY,GAAGK,uBAAf;AACH;;AACD,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AACI,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KADX;AAEI,IAAA,OAAO,EAAET,KAAK,CAACU,QAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,kCAAMH,MAAM,CAACI,SAAb,GAA2B;AAACC,MAAAA,eAAe,EAAEZ,KAAK,CAACa;AAAxB,KAA3B,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,aAAa,EAAE,CAArB;AAAwB,IAAA,KAAK,EAAEN,MAAM,CAACO,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8Cd,KAAK,CAACc,KAApD,CADJ,CAHJ,CADJ,CADJ;AAcH,CApBD;;AAsBA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE,CADA;AAENQ,IAAAA,MAAM,EAAE,EAFF;AAGNC,IAAAA,MAAM,EAAE;AAHF,GADmB;AAM7BP,EAAAA,SAAS,EAAE;AACPF,IAAAA,IAAI,EAAE,CADC;AAEPU,IAAAA,YAAY,EAAE,EAFP;AAGPC,IAAAA,WAAW,EAAE,OAHN;AAIPC,IAAAA,aAAa,EAAE,IAJR;AAKPC,IAAAA,YAAY,EAAE;AAAEC,MAAAA,KAAK,EAAE,CAAT;AAAYL,MAAAA,MAAM,EAAE;AAApB,KALP;AAMPM,IAAAA,YAAY,EAAE,EANP;AAOPC,IAAAA,SAAS,EAAE,CAPJ;AAQPC,IAAAA,OAAO,EAAE,EARF;AASPC,IAAAA,cAAc,EAAE,UATT;AAUPC,IAAAA,UAAU,EAAE;AAVL,GANkB;AAkB7Bd,EAAAA,KAAK,EAAE;AAEHe,IAAAA,QAAQ,EAAE,EAFP;AAGHC,IAAAA,SAAS,EAAE;AAHR;AAlBsB,CAAlB,CAAf;AAyBA,eAAe/B,gBAAf","sourcesContent":["import React from 'react';\nimport { \n    TouchableOpacity, \n    View, \n    Text, \n    StyleSheet, \n    Platform, \n    TouchableNativeFeedback \n} from 'react-native';\n\n\nconst CategoryGridTile = props => {\n    let TouchableCmp = TouchableOpacity;\n\n    if (Platform.OS === 'android'  && Platform.Version >= 21) {\n        TouchableCmp = TouchableNativeFeedback;\n    }\n    return (\n        <View style={styles.gridItem}>\n            <TouchableCmp\n                style={{flex: 1}}\n                onPress={props.onSelect}>\n                <View style={{...styles.container, ...{backgroundColor: props.color}}}>\n                    <Text numberOfLines={2} style={styles.title}>{props.title}</Text>\n                </View>\n        </TouchableCmp>\n\n\n        </View>\n        \n    )\n};\n\nconst styles = StyleSheet.create({\n    gridItem: {\n        flex: 1,\n        margin: 15,\n        height: 150\n    },\n    container: {\n        flex: 1,\n        borderRadius: 10,\n        shadowColor: 'black',\n        shadowOpacity: 0.26,\n        shadowOffset: { width: 0, height: 2},\n        shadowRadius: 10,\n        elevation: 3,\n        padding: 15,\n        justifyContent: 'flex-end',\n        alignItems: 'flex-end'\n    },\n    title: {\n        // fontFamily: 'open-sans-bold',\n        fontSize: 22,\n        textAlign: 'right'\n    }\n});\n\nexport default CategoryGridTile;"]},"metadata":{},"sourceType":"module"}